{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport { HeaderProfileContainer, GridContainer, FlagContainer, FlagImg, Capacete2, Capacete1, BronzeFlag, TextFlagContainer, Elo, Pdl, Queue, BronzeElo, BronzePdl, BronzeQueue, CheckoutOrderBoxContainer, CheckoutHeader, SubTitleBox, OrderBox, Division, SalePrice, BoostOrder, TotalPrice, OrderAditionsBox, FreeChampionAdition, OrdersAditionsTitle, SpellsAdition, OfflineModeAdition, VPNAdition, TotalAmountBox, TotalTitle, TotalValue, ExpressOrderBox, ExpressOrder, ButtonOrderBox, ButtonOrder } from './calculator-styles';\nimport ironFlag from \"assets/bandeira ouro 2.png\";\nimport bronzeflag from \"assets/bandeira bronze 2.png\";\nimport SelectElo from \"components/modals/SelectElo\";\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: '#797979',\n    '&$checked': {\n      color: '#4C7CDC'\n    },\n    '&$checked + $track': {\n      backgroundColor: '#446fc4'\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\n\nconst Calculator = () => {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n    checkedD: true\n  });\n  const [modalState, setModalState] = React.useState(false);\n  const [modalStateFrom, setModalStateFrom] = React.useState(false);\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  const handleModalChange = () => {\n    setModalState(!modalState);\n  };\n\n  const handleModalChangeFrom = () => {\n    setModalStateFrom(!modalStateFrom);\n  };\n\n  return __jsx(HeaderProfileContainer, null, __jsx(SelectElo, {\n    handleClose: handleModalChange,\n    open: modalState,\n    desired: true,\n    disabledFrom: 'bronze-4'\n  }), __jsx(SelectElo, {\n    handleClose: handleModalChangeFrom,\n    open: modalStateFrom,\n    desired: false\n  }), __jsx(GridContainer, null, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    s: 12,\n    md: 4\n  }, __jsx(FlagContainer, null, __jsx(BronzeElo, {\n    onClick: () => {\n      setModalStateFrom(true);\n    }\n  }, \"BRONZE 4\"), __jsx(BronzePdl, null, \"0 - 20 PDL\"), __jsx(BronzeQueue, null, \"Solo\"), __jsx(FlagImg, {\n    src: bronzeflag\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    s: 12,\n    md: 4\n  }, __jsx(FlagContainer, null, __jsx(Elo, {\n    onClick: () => {\n      setModalState(true);\n    }\n  }, \"OURO 3\"), __jsx(Pdl, {\n    onClick: () => {}\n  }, \"0 - 20 PDL\"), __jsx(Queue, null, \"Solo\"), __jsx(FlagImg, {\n    src: ironFlag\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    s: 12,\n    md: 4\n  }, __jsx(CheckoutOrderBoxContainer, null, __jsx(CheckoutHeader, null), __jsx(SubTitleBox, null, __jsx(Division, null, \"SOLO DIVISIONS\"), __jsx(SalePrice, null, \"1,186.53$\")), __jsx(OrderBox, null, __jsx(BoostOrder, null, \"Diamond IV (0 LP) - GrandMaster\"), __jsx(TotalPrice, null, \"889.90$\")), __jsx(OrderAditionsBox, null, __jsx(OrdersAditionsTitle, null, \"ORDER ADITIONS\"), __jsx(FreeChampionAdition, null, __jsx(\"span\", {\n    style: {\n      margin: 'auto 0',\n      fontFamily: 'Gilroy-Regular'\n    }\n  }, \"Choose roles and Champions\"), __jsx(PurpleSwitch, {\n    checked: state.checkedA,\n    onChange: handleChange,\n    name: \"checkedA\"\n  })), __jsx(SpellsAdition, null, __jsx(\"span\", {\n    style: {\n      margin: 'auto 0',\n      fontFamily: 'Gilroy-Regular'\n    }\n  }, \"Choose summoner spells\"), __jsx(PurpleSwitch, {\n    checked: state.checkedB,\n    onChange: handleChange,\n    name: \"checkedB\"\n  })), __jsx(OfflineModeAdition, null, __jsx(\"span\", {\n    style: {\n      margin: 'auto 0',\n      fontFamily: 'Gilroy-Regular'\n    }\n  }, \"Offline mode\"), __jsx(PurpleSwitch, {\n    checked: state.checkedC,\n    onChange: handleChange,\n    name: \"checkedC\"\n  })), __jsx(VPNAdition, null, __jsx(\"span\", {\n    style: {\n      margin: 'auto 0',\n      fontFamily: 'Gilroy-Regular'\n    }\n  }, \"VPN + Encryption Protection\"), __jsx(PurpleSwitch, {\n    checked: state.checkedD,\n    onChange: handleChange,\n    name: \"checkedD\"\n  })))), __jsx(TotalAmountBox, null, __jsx(TotalTitle, null, \"TOTAL\"), __jsx(TotalValue, null, \"889.90 $\")), __jsx(ExpressOrderBox, null, __jsx(ExpressOrder, null, __jsx(\"span\", {\n    style: {\n      margin: 'auto 0'\n    }\n  }, \"Express Order \", __jsx(\"span\", {\n    style: {\n      color: '#B0B0B0',\n      margin: 'auto 0'\n    }\n  }, \"(+25%)\")), __jsx(PurpleSwitch, {\n    checked: state.checkedE,\n    onChange: handleChange,\n    name: \"checkedE\"\n  }))), __jsx(ButtonOrderBox, null, __jsx(ButtonOrder, null, \"Purchase Boost\"))))));\n};\n\nexport default Calculator;","map":null,"metadata":{},"sourceType":"module"}