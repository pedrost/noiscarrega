{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { HeaderProfileContainer, GridContainer } from './select-elo-styles';\nimport Box from '@material-ui/core/Box';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  };\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other), __jsx(Typography, {\n    variant: \"h6\"\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose\n  }, __jsx(CloseIcon, null)) : null);\n});\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\n\nvar SelecElo = function SelecElo(_ref) {\n  var valueParam = _ref.valueParam,\n      _ref$open = _ref.open,\n      open = _ref$open === void 0 ? true : _ref$open,\n      _ref$handleClose = _ref.handleClose,\n      handleClose = _ref$handleClose === void 0 ? function () {} : _ref$handleClose;\n\n  var _useState = useState(true),\n      paypalLoaded = _useState[0],\n      setPaypalLoaded = _useState[1];\n\n  useEffect(function () {\n    if (open) {\n      console.log('using effect', paypal);\n      setTimeout(function () {\n        paypal.Buttons({\n          createOrder: function createOrder(data, actions) {\n            // This function sets up the details of the transaction, including the amount and line item details.\n            return actions.order.create({\n              purchase_units: [{\n                amount: {\n                  currency_code: \"BRL\",\n                  value: valueParam || '10'\n                }\n              }]\n            });\n          },\n          onApprove: function onApprove(data, actions) {\n            // This function captures the funds from the transaction.\n            window.location = \"https://www.noiscarrega.com.br/agradecimento\";\n            return actions.order.capture().then(function (details) {\n              // This function shows a transaction success message to your buyer.\n              alert('Transaction completed by ' + details.payer.name.given_name);\n            });\n          }\n        }).render('#paypal-button-container');\n        setPaypalLoaded(false);\n      }, 2000);\n    }\n  }, [open]);\n  return __jsx(HeaderProfileContainer, null, __jsx(Dialog, {\n    fullWidth: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open\n  }, __jsx(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose\n  }, \"Selecionar m\\xE9todo de pagamento\"), __jsx(DialogContent, {\n    dividers: true\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    style: {\n      padding: '8px 0',\n      textAlign: 'center'\n    },\n    justify: \"center\",\n    alignItems: \"center\"\n  }, paypalLoaded && __jsx(CircularProgress, null), __jsx(\"div\", {\n    id: \"paypal-button-container\"\n  })))));\n};\n\nexport default SelecElo;","map":null,"metadata":{},"sourceType":"module"}